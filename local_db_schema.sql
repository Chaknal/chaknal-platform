CREATE TABLE alembic_version (
	version_num VARCHAR(32) NOT NULL, 
	CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num)
);
CREATE TABLE tenant_contacts (
	id VARCHAR(36) NOT NULL, 
	company_id VARCHAR(36) NOT NULL, 
	organization_id VARCHAR(36), 
	is_shared BOOLEAN, 
	PRIMARY KEY (id), 
	FOREIGN KEY(company_id) REFERENCES company (id), 
	FOREIGN KEY(organization_id) REFERENCES organization (id)
);
CREATE INDEX ix_tenant_contacts_organization_id ON tenant_contacts (organization_id);
CREATE INDEX ix_tenant_contacts_company_id ON tenant_contacts (company_id);
CREATE TABLE tenant_campaigns (
	id VARCHAR(36) NOT NULL, 
	company_id VARCHAR(36) NOT NULL, 
	organization_id VARCHAR(36), 
	is_shared BOOLEAN, 
	PRIMARY KEY (id), 
	FOREIGN KEY(company_id) REFERENCES company (id), 
	FOREIGN KEY(organization_id) REFERENCES organization (id)
);
CREATE INDEX ix_tenant_campaigns_organization_id ON tenant_campaigns (organization_id);
CREATE INDEX ix_tenant_campaigns_company_id ON tenant_campaigns (company_id);
CREATE TABLE company (
	id VARCHAR(36) NOT NULL, 
	name VARCHAR, 
	domain VARCHAR NOT NULL, created_at DATETIME, logo_url TEXT, 
	PRIMARY KEY (id), 
	UNIQUE (domain)
);
CREATE TABLE campaigns_new (
	campaign_id VARCHAR(36) NOT NULL, 
	campaign_key VARCHAR(36) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	target_title VARCHAR(255), 
	intent TEXT NOT NULL, 
	status VARCHAR(50), 
	dux_user_id VARCHAR(100) NOT NULL, 
	scheduled_start DATETIME, 
	end_date DATETIME, 
	created_at DATETIME, 
	updated_at DATETIME, 
	settings JSON, 
	dux_campaign_id VARCHAR(100), 
	force_override BOOLEAN, 
	run_after DATETIME, 
	daily_limits JSON, 
	automation_settings JSON, 
	initial_action VARCHAR(50), 
	initial_message TEXT, 
	initial_subject VARCHAR(255), 
	follow_up_actions JSON, 
	delay_days INTEGER, 
	random_delay BOOLEAN, 
	follow_up_action_1 VARCHAR(50), 
	follow_up_message_1 TEXT, 
	follow_up_subject_1 VARCHAR(255), 
	follow_up_delay_1 INTEGER, 
	follow_up_action_2 VARCHAR(50), 
	follow_up_message_2 TEXT, 
	follow_up_subject_2 VARCHAR(255), 
	follow_up_delay_2 INTEGER, 
	follow_up_action_3 VARCHAR(50), 
	follow_up_message_3 TEXT, 
	follow_up_subject_3 VARCHAR(255), 
	follow_up_delay_3 INTEGER, 
	PRIMARY KEY (campaign_id)
);
CREATE TABLE contacts (
	contact_id VARCHAR(36) NOT NULL, 
	linkedin_id VARCHAR(100), 
	linkedin_url VARCHAR(500), 
	first_name VARCHAR(100), 
	last_name VARCHAR(100), 
	headline VARCHAR(500), 
	company VARCHAR(255), 
	company_url VARCHAR(500), 
	location VARCHAR(255), 
	industry VARCHAR(255), 
	connection_degree INTEGER, 
	email VARCHAR(255), 
	phone VARCHAR(50), 
	profile_data JSON, 
	created_at DATETIME, 
	updated_at DATETIME, 
	data_source VARCHAR(50), 
	source_id VARCHAR(100), 
	import_batch_id VARCHAR(100), 
	data_quality_score INTEGER, 
	full_name VARCHAR(255), 
	job_title VARCHAR(255), 
	company_name VARCHAR(255), 
	company_size VARCHAR(100), 
	company_website VARCHAR(500), 
	connection_count INTEGER, 
	profile_id VARCHAR(100), 
	degree_level INTEGER, 
	connection_status VARCHAR(50), 
	connection_request_sent DATETIME, 
	connection_accepted DATETIME, 
	last_message_sent DATETIME, 
	message_count INTEGER, 
	scan_time DATETIME, 
	sales_profile_url VARCHAR(500), 
	public_profile_url VARCHAR(500), 
	recruiter_profile_url VARCHAR(500), 
	middle_name VARCHAR(100), 
	company_id VARCHAR(100), 
	can_send_email BOOLEAN, 
	can_send_inmail BOOLEAN, 
	can_send_connection BOOLEAN, 
	notes TEXT, 
	PRIMARY KEY (contact_id), 
	UNIQUE (linkedin_id), 
	UNIQUE (linkedin_url)
);
CREATE TABLE organization (
	id VARCHAR(36) NOT NULL, 
	name VARCHAR NOT NULL, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (name)
);
CREATE TABLE webhook_events (
	event_id VARCHAR(36) NOT NULL, 
	dux_user_id VARCHAR(100) NOT NULL, 
	event_type VARCHAR(50) NOT NULL, 
	event_name VARCHAR(50) NOT NULL, 
	contact_id VARCHAR(36), 
	campaign_id VARCHAR(36), 
	raw_data JSON NOT NULL, 
	processed BOOLEAN NOT NULL, 
	created_at DATETIME, 
	PRIMARY KEY (event_id), 
	FOREIGN KEY(contact_id) REFERENCES contacts (contact_id), 
	FOREIGN KEY(campaign_id) REFERENCES campaigns_new (campaign_id)
);
CREATE TABLE duxsoup_queue (
	queue_id VARCHAR(36) NOT NULL, 
	dux_user_id VARCHAR(100) NOT NULL, 
	campaign_id VARCHAR(36), 
	contact_id VARCHAR(36), 
	command VARCHAR(50) NOT NULL, 
	params JSON NOT NULL, 
	force_execution BOOLEAN, 
	run_after DATETIME, 
	status VARCHAR(50) NOT NULL, 
	created_at DATETIME, 
	executed_at DATETIME, 
	result JSON, 
	error_message TEXT, 
	PRIMARY KEY (queue_id), 
	FOREIGN KEY(campaign_id) REFERENCES campaigns_new (campaign_id), 
	FOREIGN KEY(contact_id) REFERENCES contacts (contact_id)
);
CREATE TABLE duxsoup_execution_log (
	log_id VARCHAR(36) NOT NULL, 
	dux_user_id VARCHAR(100) NOT NULL, 
	campaign_id VARCHAR(36), 
	contact_id VARCHAR(36), 
	command VARCHAR(50) NOT NULL, 
	params JSON NOT NULL, 
	execution_start DATETIME, 
	execution_end DATETIME, 
	status VARCHAR(50) NOT NULL, 
	result JSON, 
	error_message TEXT, 
	response_time_ms INTEGER, 
	PRIMARY KEY (log_id), 
	FOREIGN KEY(campaign_id) REFERENCES campaigns_new (campaign_id), 
	FOREIGN KEY(contact_id) REFERENCES contacts (contact_id)
);
CREATE TABLE user (
	id VARCHAR(36) NOT NULL, 
	email VARCHAR NOT NULL, 
	hashed_password VARCHAR(1024) NOT NULL, 
	first_name VARCHAR(100), 
	last_name VARCHAR(100), 
	phone VARCHAR(20), 
	bio VARCHAR(500), 
	linkedin_url VARCHAR(500), 
	timezone VARCHAR(50), 
	role VARCHAR(20), 
	is_active VARCHAR, 
	is_superuser VARCHAR, 
	is_verified VARCHAR, 
	organization_id VARCHAR(36), 
	company_id VARCHAR(36), 
	created_at DATETIME, 
	updated_at DATETIME, is_agency BOOLEAN DEFAULT 0, agency_company_id VARCHAR(36), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organization (id), 
	FOREIGN KEY(company_id) REFERENCES company (id)
);
CREATE UNIQUE INDEX ix_user_email ON user (email);
CREATE TABLE campaign_contacts (
	campaign_contact_id VARCHAR(36) NOT NULL, 
	campaign_id VARCHAR(36) NOT NULL, 
	campaign_key VARCHAR(36) NOT NULL, 
	contact_id VARCHAR(36) NOT NULL, 
	status VARCHAR(50) NOT NULL, 
	assigned_to VARCHAR(36), 
	enrolled_at DATETIME, 
	accepted_at DATETIME, 
	replied_at DATETIME, 
	blacklisted_at DATETIME, 
	sequence_step INTEGER NOT NULL, 
	tags TEXT, 
	created_at DATETIME, 
	updated_at DATETIME, 
	dux_profile_id VARCHAR(100), 
	command_executed VARCHAR(50), 
	command_params JSON, 
	force_execution BOOLEAN, 
	run_after DATETIME, 
	execution_result JSON, 
	retry_count INTEGER, 
	last_retry DATETIME, 
	PRIMARY KEY (campaign_contact_id), 
	FOREIGN KEY(campaign_id) REFERENCES campaigns_new (campaign_id), 
	FOREIGN KEY(contact_id) REFERENCES contacts (contact_id), 
	FOREIGN KEY(assigned_to) REFERENCES user (id)
);
CREATE TABLE duxsoup_user (
	id VARCHAR(36) NOT NULL, 
	dux_soup_user_id VARCHAR NOT NULL, 
	dux_soup_auth_key VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	first_name VARCHAR NOT NULL, 
	last_name VARCHAR NOT NULL, 
	user_id VARCHAR(36), 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES user (id)
);
CREATE TABLE messages (
	message_id VARCHAR(36) NOT NULL, 
	campaign_contact_id VARCHAR(36) NOT NULL, 
	direction VARCHAR(20) NOT NULL, 
	message_text TEXT NOT NULL, 
	linkedin_message_id VARCHAR(100), 
	thread_url VARCHAR(500), 
	sent_at DATETIME, 
	received_at DATETIME, 
	status VARCHAR(50) NOT NULL, 
	tags TEXT, 
	created_at DATETIME, 
	dux_message_id VARCHAR(100), 
	command_type VARCHAR(50), 
	command_params JSON, 
	campaign_id VARCHAR(36), 
	force_execution BOOLEAN, 
	execution_result JSON, 
	retry_count INTEGER, 
	last_retry DATETIME, 
	PRIMARY KEY (message_id), 
	FOREIGN KEY(campaign_contact_id) REFERENCES campaign_contacts (campaign_contact_id), 
	FOREIGN KEY(campaign_id) REFERENCES campaigns_new (campaign_id)
);
CREATE TABLE duxsoup_user_settings (
	id VARCHAR(36) NOT NULL, 
	duxsoup_user_id VARCHAR(36) NOT NULL, 
	throttle_time INTEGER, 
	scan_throttle_time INTEGER, 
	max_visits INTEGER, 
	max_invites INTEGER, 
	max_messages INTEGER, 
	max_enrolls INTEGER, 
	linkedin_limits_nooze INTEGER, 
	linkedin_limit_alert BOOLEAN, 
	pause_on_invite_error BOOLEAN, 
	resume_delay_on_invite_error VARCHAR(10), 
	skip_noname BOOLEAN, 
	skip_noimage BOOLEAN, 
	skip_incrm BOOLEAN, 
	skip_nopremium BOOLEAN, 
	skip_3plus BOOLEAN, 
	skip_nolion BOOLEAN, 
	skip_noinfluencer BOOLEAN, 
	skip_nojobseeker BOOLEAN, 
	exclude_blacklisted_action BOOLEAN, 
	exclude_tag_skipped_action BOOLEAN, 
	exclude_low_connection_count_action BOOLEAN, 
	exclude_low_connection_count_value INTEGER, 
	kill_characters TEXT, 
	kill_words TEXT, 
	robot_schedule_plan JSON, 
	auto_tag_flag BOOLEAN, 
	auto_tag_value VARCHAR(100), 
	followup_flag BOOLEAN, 
	followup_for_all_flag BOOLEAN, 
	active_followup_campaign_id VARCHAR(100), 
	auto_connect BOOLEAN, 
	auto_follow BOOLEAN, 
	auto_disconnect BOOLEAN, 
	auto_connect_message_flag BOOLEAN, 
	auto_connect_message_text TEXT, 
	expire_pending_invites_flag BOOLEAN, 
	expire_pending_invites_value INTEGER, 
	connected_message_flag BOOLEAN, 
	connected_message_text TEXT, 
	skip_days INTEGER, 
	page_init_delay INTEGER, 
	wait_minutes INTEGER, 
	wait_visits INTEGER, 
	max_page_load_time INTEGER, 
	warning_notifications BOOLEAN, 
	action_notifications BOOLEAN, 
	info_notifications BOOLEAN, 
	buy_mail BOOLEAN, 
	pre_visit_dialog BOOLEAN, 
	auto_endorse BOOLEAN, 
	auto_endorse_target INTEGER, 
	badge_display VARCHAR(50), 
	auto_save_as_lead BOOLEAN, 
	auto_pdf BOOLEAN, 
	send_inmail_flag BOOLEAN, 
	send_inmail_subject VARCHAR(200), 
	send_inmail_body TEXT, 
	webhook_profile_flag BOOLEAN, 
	webhooks JSON, 
	message_bridge_flag BOOLEAN, 
	message_bridge_interval INTEGER, 
	remote_control_flag BOOLEAN, 
	minimised_tools BOOLEAN, 
	background_mode BOOLEAN, 
	managed_download BOOLEAN, 
	hide_system_tags BOOLEAN, 
	simplegui BOOLEAN, 
	snooze BOOLEAN, 
	uselocalstorage BOOLEAN, 
	runautomationsonmanualvisits BOOLEAN, 
	campaigns JSON, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (duxsoup_user_id), 
	FOREIGN KEY(duxsoup_user_id) REFERENCES duxsoup_user (id)
);
CREATE TABLE agency_client (
    id VARCHAR(36) PRIMARY KEY,
    agency_user_id VARCHAR(36) NOT NULL,
    client_company_id VARCHAR(36) NOT NULL,
    access_level VARCHAR(20) DEFAULT 'full',
    is_active BOOLEAN DEFAULT 1,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (agency_user_id) REFERENCES user(id),
    FOREIGN KEY (client_company_id) REFERENCES company(id)
);
CREATE TABLE agency_invitation (
    id VARCHAR(36) PRIMARY KEY,
    agency_user_id VARCHAR(36) NOT NULL,
    client_company_id VARCHAR(36) NOT NULL,
    invited_by_user_id VARCHAR(36) NOT NULL,
    access_level VARCHAR(20) DEFAULT 'full',
    status VARCHAR(20) DEFAULT 'pending',
    invitation_token VARCHAR(255) UNIQUE NOT NULL,
    expires_at DATETIME NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    accepted_at DATETIME,
    FOREIGN KEY (agency_user_id) REFERENCES user(id),
    FOREIGN KEY (client_company_id) REFERENCES company(id),
    FOREIGN KEY (invited_by_user_id) REFERENCES user(id)
);
CREATE TABLE agency_activity_log (
    id VARCHAR(36) PRIMARY KEY,
    agency_user_id VARCHAR(36) NOT NULL,
    client_company_id VARCHAR(36) NOT NULL,
    activity_type VARCHAR(50) NOT NULL,
    activity_description TEXT NOT NULL,
    metadata TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, activity_metadata TEXT,
    FOREIGN KEY (agency_user_id) REFERENCES user(id),
    FOREIGN KEY (client_company_id) REFERENCES company(id)
);
CREATE TABLE meetings (
	meeting_id VARCHAR(36) NOT NULL, 
	campaign_contact_id VARCHAR(36) NOT NULL, 
	contact_id VARCHAR(36) NOT NULL, 
	campaign_id VARCHAR(36), 
	meeting_type VARCHAR(50), 
	meeting_status VARCHAR(50) NOT NULL, 
	scheduled_date DATETIME, 
	actual_date DATETIME, 
	duration_minutes INTEGER, 
	meeting_link VARCHAR(500), 
	booked_by VARCHAR(36), 
	booking_source VARCHAR(50), 
	booking_message_id VARCHAR(36), 
	booking_notes TEXT, 
	outcome VARCHAR(50), 
	outcome_notes TEXT, 
	next_action VARCHAR(100), 
	follow_up_date DATETIME, 
	deal_value VARCHAR(20), 
	contact_title_at_meeting VARCHAR(255), 
	contact_company_at_meeting VARCHAR(255), 
	agenda TEXT, 
	attendees TEXT, 
	preparation_notes TEXT, 
	reminder_sent BOOLEAN, 
	calendar_invite_sent BOOLEAN, 
	confirmation_received BOOLEAN, 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (meeting_id), 
	FOREIGN KEY(campaign_contact_id) REFERENCES campaign_contacts (campaign_contact_id), 
	FOREIGN KEY(contact_id) REFERENCES contacts (contact_id), 
	FOREIGN KEY(campaign_id) REFERENCES campaigns_new (campaign_id), 
	FOREIGN KEY(booked_by) REFERENCES user (id), 
	FOREIGN KEY(booking_message_id) REFERENCES messages (message_id)
);
