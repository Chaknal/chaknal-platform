"""Initial SQLite schema with all models

Revision ID: febdbc88f63d
Revises: 
Create Date: 2025-08-30 13:41:49.855945

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'febdbc88f63d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns_new',
    sa.Column('campaign_id', sa.String(length=36), nullable=False),
    sa.Column('campaign_key', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_title', sa.String(length=255), nullable=True),
    sa.Column('intent', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('dux_user_id', sa.String(length=100), nullable=False),
    sa.Column('scheduled_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('dux_campaign_id', sa.String(length=100), nullable=True),
    sa.Column('force_override', sa.Boolean(), nullable=True),
    sa.Column('run_after', sa.DateTime(timezone=True), nullable=True),
    sa.Column('daily_limits', sa.JSON(), nullable=True),
    sa.Column('automation_settings', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('campaign_id')
    )
    op.create_table('company',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('domain', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain')
    )
    op.create_table('contacts',
    sa.Column('contact_id', sa.String(length=36), nullable=False),
    sa.Column('linkedin_id', sa.String(length=100), nullable=True),
    sa.Column('linkedin_url', sa.String(length=500), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('headline', sa.String(length=500), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('company_url', sa.String(length=500), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('industry', sa.String(length=255), nullable=True),
    sa.Column('connection_degree', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('profile_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('profile_id', sa.String(length=100), nullable=True),
    sa.Column('degree_level', sa.Integer(), nullable=True),
    sa.Column('connection_status', sa.String(length=50), nullable=True),
    sa.Column('connection_request_sent', sa.DateTime(timezone=True), nullable=True),
    sa.Column('connection_accepted', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_message_sent', sa.DateTime(timezone=True), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('can_send_email', sa.Boolean(), nullable=True),
    sa.Column('can_send_inmail', sa.Boolean(), nullable=True),
    sa.Column('can_send_connection', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('contact_id'),
    sa.UniqueConstraint('linkedin_id'),
    sa.UniqueConstraint('linkedin_url')
    )
    op.create_table('duxsoup_user_settings',
    sa.Column('setting_id', sa.String(length=36), nullable=False),
    sa.Column('dux_user_id', sa.String(length=100), nullable=False),
    sa.Column('settings_type', sa.String(length=50), nullable=False),
    sa.Column('settings_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('setting_id')
    )
    op.create_table('organization',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('campaign_contacts',
    sa.Column('campaign_contact_id', sa.String(length=36), nullable=False),
    sa.Column('campaign_id', sa.String(length=36), nullable=False),
    sa.Column('campaign_key', sa.String(length=36), nullable=False),
    sa.Column('contact_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('enrolled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('replied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('blacklisted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sequence_step', sa.Integer(), nullable=False),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dux_profile_id', sa.String(length=100), nullable=True),
    sa.Column('command_executed', sa.String(length=50), nullable=True),
    sa.Column('command_params', sa.JSON(), nullable=True),
    sa.Column('force_execution', sa.Boolean(), nullable=True),
    sa.Column('run_after', sa.DateTime(timezone=True), nullable=True),
    sa.Column('execution_result', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('last_retry', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns_new.campaign_id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.contact_id'], ),
    sa.PrimaryKeyConstraint('campaign_contact_id')
    )
    op.create_table('duxsoup_execution_log',
    sa.Column('log_id', sa.String(length=36), nullable=False),
    sa.Column('dux_user_id', sa.String(length=100), nullable=False),
    sa.Column('campaign_id', sa.String(length=36), nullable=True),
    sa.Column('contact_id', sa.String(length=36), nullable=True),
    sa.Column('command', sa.String(length=50), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('execution_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('execution_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns_new.campaign_id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.contact_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('duxsoup_queue',
    sa.Column('queue_id', sa.String(length=36), nullable=False),
    sa.Column('dux_user_id', sa.String(length=100), nullable=False),
    sa.Column('campaign_id', sa.String(length=36), nullable=True),
    sa.Column('contact_id', sa.String(length=36), nullable=True),
    sa.Column('command', sa.String(length=50), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('force_execution', sa.Boolean(), nullable=True),
    sa.Column('run_after', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns_new.campaign_id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.contact_id'], ),
    sa.PrimaryKeyConstraint('queue_id')
    )
    op.create_table('user',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.String(), nullable=True),
    sa.Column('is_superuser', sa.String(), nullable=True),
    sa.Column('is_verified', sa.String(), nullable=True),
    sa.Column('organization_id', sa.String(length=36), nullable=True),
    sa.Column('company_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('webhook_events',
    sa.Column('event_id', sa.String(length=36), nullable=False),
    sa.Column('dux_user_id', sa.String(length=100), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_name', sa.String(length=50), nullable=False),
    sa.Column('contact_id', sa.String(length=36), nullable=True),
    sa.Column('campaign_id', sa.String(length=36), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns_new.campaign_id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.contact_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('duxsoup_user',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('dux_soup_user_id', sa.String(), nullable=False),
    sa.Column('dux_soup_auth_key', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.String(length=36), nullable=False),
    sa.Column('campaign_contact_id', sa.String(length=36), nullable=False),
    sa.Column('direction', sa.String(length=20), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('linkedin_message_id', sa.String(length=100), nullable=True),
    sa.Column('thread_url', sa.String(length=500), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dux_message_id', sa.String(length=100), nullable=True),
    sa.Column('command_type', sa.String(length=50), nullable=True),
    sa.Column('command_params', sa.JSON(), nullable=True),
    sa.Column('campaign_id', sa.String(length=36), nullable=True),
    sa.Column('force_execution', sa.Boolean(), nullable=True),
    sa.Column('execution_result', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('last_retry', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_contact_id'], ['campaign_contacts.campaign_contact_id'], ),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns_new.campaign_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages')
    op.drop_table('duxsoup_user')
    op.drop_table('webhook_events')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('duxsoup_queue')
    op.drop_table('duxsoup_execution_log')
    op.drop_table('campaign_contacts')
    op.drop_table('organization')
    op.drop_table('duxsoup_user_settings')
    op.drop_table('contacts')
    op.drop_table('company')
    op.drop_table('campaigns_new')
    # ### end Alembic commands ###
